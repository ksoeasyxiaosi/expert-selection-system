const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ ÂºÄÂßãÊûÑÂª∫ Linux ARM Â∫îÁî®...');

// ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè
process.env.ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES = 'true';
process.env.GH_TOKEN = 'dummy-token';
process.env.GITHUB_TOKEN = 'dummy-token';

// Ê∏ÖÁêÜ‰πãÂâçÁöÑÊûÑÂª∫
if (fs.existsSync('dist')) {
    console.log('üßπ Ê∏ÖÁêÜ‰πãÂâçÁöÑÊûÑÂª∫Êñá‰ª∂...');
    execSync('rm -rf dist', { stdio: 'inherit' });
}

try {
    // ÊûÑÂª∫ ARM64 ÁâàÊú¨
    console.log('üî® ÊûÑÂª∫ ARM64 ÁâàÊú¨...');
    execSync('npx electron-builder --linux --arm64 --publish never', { 
        stdio: 'inherit',
        env: { ...process.env }
    });
    
    // ÊûÑÂª∫ ARMv7l ÁâàÊú¨
    console.log('üî® ÊûÑÂª∫ ARMv7l ÁâàÊú¨...');
    execSync('npx electron-builder --linux --armv7l --publish never', { 
        stdio: 'inherit',
        env: { ...process.env }
    });
    
    console.log('‚úÖ ÊûÑÂª∫ÂÆåÊàêÔºÅ');
    
    // ÊòæÁ§∫ÊûÑÂª∫‰∫ßÁâ©
    if (fs.existsSync('dist')) {
        console.log('\nüì¶ ÊûÑÂª∫‰∫ßÁâ©:');
        const files = fs.readdirSync('dist');
        files.forEach(file => {
            const filePath = path.join('dist', file);
            const stats = fs.statSync(filePath);
            if (stats.isFile()) {
                console.log(`  - ${file} (${(stats.size / 1024 / 1024).toFixed(2)} MB)`);
            }
        });
    }
    
} catch (error) {
    console.error('‚ùå ÊûÑÂª∫Â§±Ë¥•:', error.message);
    process.exit(1);
}
