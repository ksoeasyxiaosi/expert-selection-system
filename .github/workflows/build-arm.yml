name: Build ARM Linux App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      architecture:
        description: 'Target Architecture'
        required: true
        default: 'arm64'
        type: choice
        options:
        - arm64
        - armv7l

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3 make
        
    - name: Install npm dependencies
      run: npm install
      
    - name: Rebuild sqlite3 for ARM
      run: |
        export npm_config_arch=${{ github.event.inputs.architecture || 'arm64' }}
        export npm_config_target=28.0.0
        export npm_config_disturl=https://electronjs.org/headers
        export npm_config_runtime=electron
        export npm_config_build_from_source=true
        npm rebuild sqlite3
        
    - name: Verify sqlite3 module
      run: |
        echo "Checking sqlite3 module..."
        ls -la node_modules/sqlite3/lib/binding/ || echo "No binding directory found"
        find node_modules/sqlite3 -name "*.node" || echo "No .node files found"
        
    - name: Build Linux ARM App
      run: |
        if [ "${{ github.event.inputs.architecture }}" = "armv7l" ]; then
          npm run build:linux-arm
        else
          npm run build:linux-arm64
        fi
        
    - name: List build artifacts
      run: |
        echo "Build artifacts:"
        ls -la dist/
        echo "File sizes:"
        du -h dist/*
        
    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: expert-selection-system-${{ github.event.inputs.architecture || 'arm64' }}-AppImage
        path: dist/*.AppImage
        retention-days: 30
        
    - name: Upload Deb package
      uses: actions/upload-artifact@v4
      with:
        name: expert-selection-system-${{ github.event.inputs.architecture || 'arm64' }}-Deb
        path: dist/*.deb
        retention-days: 30
        
    - name: Upload unpacked directory
      uses: actions/upload-artifact@v4
      with:
        name: expert-selection-system-${{ github.event.inputs.architecture || 'arm64' }}-unpacked
        path: dist/linux-${{ github.event.inputs.architecture || 'arm64' }}-unpacked/
        retention-days: 30
