name: Release ARM Linux App

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3 make
        
    - name: Configure npm for better reliability
      run: |
        npm config set registry https://registry.npmjs.org/
        npm config set timeout 600000
        npm config set fetch-retries 5
        npm config set fetch-retry-mintimeout 20000
        npm config set fetch-retry-maxtimeout 120000
        
    - name: Set Electron environment variables
      run: |
        export ELECTRON_MIRROR=https://npmmirror.com/mirrors/electron/
        export ELECTRON_BUILDER_BINARIES_MIRROR=https://npmmirror.com/mirrors/electron-builder-binaries/
        export ELECTRON_CUSTOM_DIR={{ version }}
        echo "Electron mirror: $ELECTRON_MIRROR"
        echo "Electron builder binaries mirror: $ELECTRON_BUILDER_BINARIES_MIRROR"
        
    - name: Install npm dependencies with retry
      run: |
        for i in 1 2 3; do
          echo "Attempt $i to install dependencies..."
          if npm ci --no-audit --no-fund; then
            echo "Dependencies installed successfully!"
            break
          else
            echo "Attempt $i failed. Retrying..."
            if [ $i -eq 3 ]; then
              echo "All attempts failed. Exiting."
              exit 1
            fi
            sleep 10
          fi
        done
        
    - name: Rebuild sqlite3 for all architectures
      run: |
        # ARM64
        export npm_config_arch=arm64
        export npm_config_target=28.0.0
        export npm_config_disturl=https://electronjs.org/headers
        export npm_config_runtime=electron
        export npm_config_build_from_source=true
        npm rebuild sqlite3
        
        # x64
        export npm_config_arch=x64
        npm rebuild sqlite3
        
    - name: Build all Linux architectures
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
      run: |
        npm run build:linux-arm64
        npm run build:linux-x64
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.AppImage
          dist/*.deb
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
